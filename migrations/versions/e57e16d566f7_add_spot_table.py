"""add_spot_table

Revision ID: e57e16d566f7
Revises: 306de3c4de50
Create Date: 2023-09-13 22:02:26.396541

"""
import sqlalchemy as sa
from alembic import op
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision = "e57e16d566f7"
down_revision = "306de3c4de50"
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table(
        "spot",
        sa.Column("updated_at", sa.DateTime(), server_default=sa.text("now()"), nullable=False),
        sa.Column("created_at", sa.DateTime(), server_default=sa.text("now()"), nullable=False),
        sa.Column("deleted_at", sa.DateTime(), nullable=True),
        sa.Column(
            "id_spot",
            postgresql.UUID(as_uuid=True),
            server_default=sa.text("gen_random_uuid()"),
            nullable=False,
        ),
        sa.Column("id_user", postgresql.UUID(as_uuid=True), nullable=True),
        sa.Column("name", sa.String(length=50), nullable=False),
        sa.Column("description", sa.String(length=500), nullable=False),
        sa.Column("personal_quota", sa.Integer(), nullable=False),
        sa.Column(
            "images", postgresql.ARRAY(postgresql.JSONB(astext_type=sa.Text())), nullable=True
        ),
        sa.Column("type", sa.Enum("HOUSE", "APARTMENT", name="spottype"), nullable=False),
        sa.Column("value", sa.Numeric(), nullable=False),
        sa.Column("lat", sa.Numeric(), nullable=False),
        sa.Column("long", sa.Numeric(), nullable=False),
        sa.Column("street", sa.String(length=500), nullable=False),
        sa.Column("number", sa.String(length=500), nullable=False),
        sa.Column("complement", sa.String(length=500), nullable=False),
        sa.Column("city", sa.String(length=500), nullable=False),
        sa.Column("state", sa.String(length=2), nullable=False),
        sa.Column("observations", sa.String(length=500), nullable=False),
        sa.Column(
            "key",
            postgresql.JSONB(astext_type=sa.Text()),
            server_default=sa.text("'{}'"),
            nullable=False,
        ),
        sa.ForeignKeyConstraint(["id_user"], ["user.id_user"], name="spot_user_id_user"),
        sa.PrimaryKeyConstraint("id_spot"),
        sa.UniqueConstraint("id_spot"),
    )
    op.create_index(op.f("ix_spot_id_user"), "spot", ["id_user"], unique=False)


def downgrade():
    op.drop_index(op.f("ix_spot_id_user"), table_name="spot")
    op.drop_table("spot")
